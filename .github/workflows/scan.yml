---
name: scan
on:
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: '35 18 * * 0'
  push:
    branches: ['main']
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ['main']
permissions:
  actions: read
  contents: read
  security-events: write
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.action }}
  cancel-in-progress: true
jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      - uses: aquaproj/aqua-installer@fd2089d1f56724d6456f24d58605e6964deae124 # v2.3.2
        with:
          aqua_version: v2.28.0
          enable_aqua_install: true
          aqua_opts: '--tags scan'
        env:
          AQUA_LOG_LEVEL: debug
          AQUA_OPTS: ''
      - name: env-config-go
        run: |
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      # no pinning of github managed action
      - name: Setup Golang caches
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3
        with:
          path: |
            ${HOME}/.cache/go-build
            ${HOME}/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      # This should be informational, and not block as it's experimental and no exclusion logic at this time that I've found.
      # https://go.dev/security/vuln/#feedback
      - name: govuln-scan
        uses: elgohr/go-vulncheck-action@2325facbb97c96a945c48e644308c756e1af2cba # renovate tag=v1
        continue-on-error: true
      # - name: mage-vulcheck
      #   run: |
      #     export PATH="${AQUA_ROOT_DIR:-${XDG_DATA_HOME:-$HOME/.local/share}/aquaproj-aqua}/bin/aqua:${PATH}"
      #     export PATH="$(go env GOPATH)/bin:${PATH}"
      #     mage vulncheck
  codeql:
    name: codeql-scan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ['go']
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@e113c555ef0956479345cfc3ed530c938d670db0 # v2
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          # queries: security-extended,security-and-quality

      # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@e113c555ef0956479345cfc3ed530c938d670db0 # v2

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

      #   If the Autobuild fails above, remove it and uncomment the following three lines.
      #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.
      # - run: |
      #   echo "Run, Build Application using script"
      #   ./location_of_script_within_repo/buildscript.sh

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@e113c555ef0956479345cfc3ed530c938d670db0 # v2
        with:
          category: '/language:${{matrix.language}}'
