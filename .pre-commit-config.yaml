---
# Setup: pre-commit install
# Upgrade: pre-commit autoupdate
# Run: pre-commit run --all-files
# https://pre-commit.com/hooks.html
default_language_version:
  # force all unspecified python hooks to run python3
  python: python3
  node: 16.15.0
exclude: |
  (?x)(
  ^.devcontainer/|
  ^.cache/|
  ^.artifacts/|
  ^vendor/|
  ^vendir.lock.yml$|
  vendor/
  )
default_stages: [commit, push]
repos:
  - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
    # https://github.com/jumanjihouse/pre-commit-hook-yamlfmt#override-defaults
    # https://yaml.readthedocs.io/en/latest/example.html
    rev: 0.2.2 # or specific tag
    hooks:
      - id: yamlfmt
        types_or: [yaml]
        args: [--mapping, '2', --sequence, '4', --offset, '2', --width, '999']
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.2.0
    hooks:
      - name: detect-secrets
        id: detect-secrets
        stages: [commit]
        args: [--disable-plugin, KeywordDetector, --exclude-files, .gitleaks.toml, --exclude-files, .trunk/trunk.yaml]
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.27.1 # or higher tag
    hooks:
      - id: yamllint
        types_or: [yaml]
        args: [--format, parsable, --strict, --config-file, .yamllint.yaml]
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0 # Use the ref you want to point at
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-case-conflict
        name: Prevent case conflicts
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]
      - id: mixed-line-ending
        name: Normalize line endings to lf
        args: [--fix=lf]
          # - id: check-yaml
          # - id: check-json
          #   exclude: ^.vscode/
          # - id: pretty-format-json
          #   exclude: ^.vscode/
          #   #args: [--fix]
          # - id: detect-private-key

          # - id: end-of-file-fixer
      - id: fix-byte-order-marker

      - id: check-added-large-files
        name: No large files, use artifacts for that
      - id: check-merge-conflict
        name: Prevent merge markers being committed
      - id: forbid-new-submodules
        name: Don't allow git submodules
        pass_filenames: false
      - id: no-commit-to-branch
        name: Don't commit to main
        args: [--branch, master, --branch, main]
        pass_filenames: false

    # - repo: https://github.com/tekwizely/pre-commit-golang
    #   rev: v0.8.3
    #   hooks:
    #     - id: go-imports   # replaces go-fmt
    #       args: [-w]
    #     - id: go-vet
    #     - id: go-vet-mod
    #     - id: go-vet-pkg
    #     - id: go-vet-repo-mod
    #     - id: go-vet-repo-pkg
    #     - id: go-sec-mod
    #     - id: go-sec-pkg
    #     - id: go-sec-repo-mod
    #     - id: go-sec-repo-pkg
    #     - id: go-critic
  - repo: https://gitlab.com/bmares/check-json5
    rev: v1.0.0
    hooks:
      - id: check-json5
          # stages: ['commit']

  - repo: local
    hooks:
      - id: golines
        name: go-fmt
        description: Run formatter against changed files
        entry: golines --base-formatter="gofumpt" -w --max-len=120 --no-reformat-tags
        types: [go]
        language: system
        pass_filenames: true
      - id: golangci-lint
        name: golangci-lint
        description: Fast linters runner for Go.
        entry: golangci-lint run --fix --new-from-rev=HEAD~
        types: [go]
        language: system
        pass_filenames: false
      - id: go-test-all
        name: go-test-all
        description: Run integration tests for go
        entry: gotestsum --format pkgname -- -shuffle=on -race -tags integration ./...
        stages: [commit]
        types: [go]
        language: system
        pass_filenames: false
        verbose: true
      - id: go-mod-tidy
        name: go-mod-tidy
        description: Run go mod tidy
          # entry: #env GOTEST_FLAGS='-tags integration' mage -v go:test
        entry: go mod tidy
        stages: [commit]
        types: [go]
        language: golang
        pass_filenames: false
        verbose: true
      # - id: go-mod-vendor
      #   name: go-mod-vendor
      #   description: Run go mod vendor
      #     # entry: #env GOTEST_FLAGS='-tags integration' mage -v go:test
      #   entry: mod vendor
      #   stages: [commit]
      #   types: [go]
      #   language: golang
      #   pass_filenames: false
      #   verbose: true
      # TODO: not certain why, but go work sync or go version etc doesn't work here

  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.4.0
    hooks:
      - id: markdownlint-cli2
  # - repo: https://github.com/zricethezav/gitleaks
  #   rev: v8.8.12
  #   hooks:
  #     - id: gitleaks
  #       name: gitleaks-scan
  - repo: local
    hooks:
      - id: gitleaks-docker
        name: Detect hardcoded secrets
        description: Detect hardcoded secrets using Gitleaks
        entry: zricethezav/gitleaks protect --verbose --redact
        language: docker_image
        pass_filenames: false
