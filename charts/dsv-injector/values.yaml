---
# Default values for the Delina DevOps Secrets Vault (DSV) Secrets Injector
# Kubernetes API Server Mutating Webhook.

# -- credentialsJson contains the JSON-formatted credentials file (see README.md)
# @default - placeholder. *REQUIRED FIELD*
credentialsJson: >-
  {
    "default": {
      "credentials": {
        "clientId": "",
        "clientSecret": ""
      },
      "tenant": "example"
    }
  }

# -- replicate count
# @default - 1
replicaCount: 1

image:
  repository: docker.io/delineaxpm/dsv-k8s
  # -- pullPolicy is the image pull policy.
  # If running locally built images, you'll want to set to Never to ensure local loaded images are used.
  # Local testing use: `Never`.
  # @default -- IfNotPresent
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  # Local Testing: Use `latest`.
  # @default -- the current app version/chart version
  tag: v1.2.1
  # -- Entrypoint is the path to the binary. Since the container image could contain multiple binaries, this makes sure it's correctly mapped to the binary.
  entrypoint: /app/dsv-injector

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

# -- podAnnotations
# @default - Includes `dsv-filter-name` for easier log selector filter.
podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

# -- securityContext is the security context for the controller.
# This uses chainguard static nonroot based image.
# Reference: https://edu.chainguard.dev/chainguard/chainguard-images/reference/static/overview/
securityContext:
  # -- readOnlyRootFilesystem is the read only root file system flag.
  # @default -- true
  readOnlyRootFilesystem: true
  # -- runAsNonRoot is the run as non root flag.
  # @default -- true
  runAsNonRoot: true
  # -- runAsUser is the run as user.
  # @default -- 65532 (from chainguard static image)
  runAsUser: 65532
  # -- runAsGroup is the run as group.
  # @default -- 65532 (from chainguard static image)
  runAsGroup: 65532
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Default port for the injector webhook service.
  #  @default -- port 8543
  port: 8543

  # -- ClusterIP is typical when the webhook is running as a POD
  # However, it can also be hosted externally, which is useful for debugging, by providing the following instead:
  #   type: ExternalName
  # externalName: my.fqdn
  # So long as:
  # - my.fqdn hosts an HTTPS endpoint on port {webhookPort} that answers URI {webhookUri}
  # - the certificate must have a Subject Alternative Name for {name}.{namespace}.{svc}, e.g., dsv-injector.dsv.svc
  # - the caBundle must be a base64 string containing a PEM-encoded certificate chain that validates the certifcate
  # caBundle: ...
  type: ClusterIP

# -- We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# @default -- No default values, user must specify to set resource limits.
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# -- webhookUri is path portion of the URL of the webhook endpoint
webhookUri: /inject
# -- webhookPort is the port that the webhook endpoint is listening on
# @default -- 8543
webhookPort: 8543
# -- webhookScope specifies which resources are in scope, "Cluster", "Namespaced" or "*"
# @default -- "Namespaced"
webhookScope: Namespaced
# -- containerPort is the port that the container itself listens on
containerPort: 18543

# -- configmap are configuration values for the app to load.
# All of these are defaulted in the template itself and only need be set if adjusting.
# Since the user for the container is nonroot, only edit if you know what you are doing.
# Boolean values should be passed quoted to avoid issues.
# @default -- {} empty.
configmap:
  {}
  # DSV_CERT:
  # DSV_KEY:
  # DSV_CREDENTIALS_JSON:
  # DSV_SERVER_ADDRESS:
  # DSV_DEBUG: 'true'  # Warning: if passing boolean, use quoted string to avoid issues
